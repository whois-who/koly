

function Block1() {


    return (
        <div className="blockes">
            <div className="more">
                <div className="image">
                    <img src="https://images.unsplash.com/photo-1553095066-5014bc7b7f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8d2FsbCUyMGJhY2tncm91bmR8ZW58MHx8MHx8&w=1000&q=80" alt="" />
                </div>
                <div>
                    <div className="image_blok"><h1>Cодержание:</h1> <br /> 1. Введение <br /> 2. На что способен C#? <br />3.Сходство C# и Java <br /> 4. Ближайшее перспективы языка</div>

                    <div className="image_blok">Если коротко, этот язык:
                         <ul> Кросс-платформенный — запускается почти на любом железе.</ul>
                         <ul> Объектно-ориентированный — состоит из классов и объектов, которые умеют передавать свойства друг другу.</ul>
                         <ul> Постоянно развивается — для тех, кто любит учиться.</ul>
                         <ul> Дружит с экосистемой Windows — для этого и был написан.</ul></div>

                    <div className="image_blok">Есть две основных версии, зачем Microsoft стала делать свой язык программирования.
                    Официальная: чтобы упростить разработку приложений под Windows. А то языки в то время были сложные и плохо адаптировались под разные Windows-компьютеры. Правдоподобная: чтобы заменить Java, на который у Microsoft не было лицензии. В итоге получился почти такой же язык, но с интеграцией под Windows. Как и Java, он основан на языке C и легко запускается на любом устройстве. А название «Си» с решёткой как бы говорит: «У нас тут не копия Java, а новый язык в линейке „Си“».</div>
                </div></div>

            <div> <h1>1. Введение</h1> <h3>На сегодняшний момент язык программирования C#, вместе с Java и C++, один из самых мощных, быстро развивающихся и востребованных языков в ИТ-отрасли. В настоящий момент на нем пишутся самые различные приложения. По сравнению со многими другими распространенными языками C# – достаточно молодой. Первая версия языка вышла вместе с релизом Microsoft
Visual Studio .NET в феврале 2002 года. Текущей версией языка является версия
C# 7.0, которая вышла в 7 марта 2017 года вместе с Visual Studio 2017.
C# является языком с Си-подобным синтаксисом и близок в этом
отношении к C++ и Java. Поэтому, овладеть C# существенно легче, если есть
навыки работы на C++ или Java.
C# является объектно-ориентированным и поддерживает полиморфизм,
наследование, перегрузку операторов, статическую типизацию. Объектноориентированный подход позволяет решить задачи по построению крупных, но
в тоже время гибких, масштабируемых и расширяемых приложений. C# в
настоящий момент активно развивается, и с каждой новой версией появляется
все больше интересных функциональностей, такие как лямбда-выражения,
динамическое связывание, асинхронные методы и т.д.
В настоящем пособии описаны основные возможности платформы .NET
Framework. Показана структура программ на языке C#, возможности отладки и
запуска консольных приложений. Рассмотрены основные типы данных и
преобразования между ними. Изучены основные операторы языка
программирования, в том числе, оператор обработки исключительных
ситуаций. Рассмотрены синтаксис описания методов и способы передачи
параметров между основной подпрограммой и методом. Объяснены основные
концепции объектно-ориентированного программирования: инкапсуляция,
наследование, полиморфизм. Показано, как работать со ссылочными типами
данных, обсуждена работа сборщика мусора. Изучены предопределенные
платформой классы. Объяснено, что такое индексаторы и атрибуты. Отдельные
главы посвящены работе с событиями и делегатами, свойствами и
перегруженными операторами.
Во втором издании исправлены незначительные ошибки и добавлено
рассмотрение работы с обобщенными коллекциями.</h3></div>

            <div><h1>2. На что способен C#?</h1> <h3>В современном виде С# способен на очень многие вещи. Сегодня он не зря занимает лидирующие позиции в списках популярных языков, так как на его основе вы можете строить практически любые угодные вам проекты.
Предположим, если вам нужно написать программу для считывания данных с сайта и вывода их в консоль – не проблема. Нужно сделать веб сайт, создать приложение под Виндовс, написать нейронную сеть, сделать игру или написать мобильное приложение – все это можно делать, используя разные библиотеки и Фреймворки, что доступны для этого языка. Про них мы поговорим чуть позже, но пока просто можете знать, что изучив базовый синтаксис языка и далее изучив различные его дополнения (другими словами библиотеки), вы сможете делать, практически, все что вам только захочется. Кроме того, после появления игрового движка Unity язык приобрел дополнительную мощь на рынке. Теперь на его основе в связке с мега популярным движком Unity вы легко и быстро можете создавать игры любого жанра и любой сложности.</h3></div>

            <div> <h1>3. Сходство C# и Java</h1> <h3> Многие очень часто сравнивают язык C# и язык Джава. Делают они это не спроста. 
Во-первых, языки появились с разницей в 5 лет, что не очень много. 
Во-вторых, их синтаксис написания кода очень схож. 
И в-третьих, они приблизительно выполняют одни и те же действия и работают в смежных сферах.
Такое сходство не случайно. После релиза язык Джава стал стремительно набирать обороты популярности. В то же время компания Microsoft решила предпринять меры и начала разработку языка, который бы напрямую конкурировал с Джава. Таким языком стал как раз язык C#.
Их сравнение вполне оправдано, хотя при сравнении сказать что лучше – просто невозможно. Несмотря на схожий синтаксис и схожие сферы применения языки все же имеют некоторые различия.
К примеру, написание программ под Виндовс гораздо удобнее на С#. Это не мудрено, ведь Виндовс и С# были созданы одной компанией. В то же время разработка мобильных приложений под Андроид явно относится только к языку Джава. При этом разработка игр уже удобнее на C#, ведь есть движок Unity. А вот с разработкой веб сайтов все максимально сложно. Там и там есть крутые фреймворки и там и там можно делать сайты любой сложности.</h3>
            </div>

            <div> <h1>4. Ближайшее перспективы языка</h1> <h3> На сегодня язык обладает невероятно большим сообществом разработчиков. На основе языка можно делать проекты из разных сфер. Его будущие перспективы достаточно оптимистичны.


Язык все время развивается, появляются новые вакансии на рынке и список возможностей у языка постоянно растет. Изучив язык вы сможете найти себе работу, стать крутым программистом и делать те проекты из той сферы, которая вам наиболее будет подходить по духу.</h3>
            </div>
        </div>
    );
}

export default Block1;